version: '3.8'
services:
  backend:
    image: client
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      service-db:
        condition: service_healthy
    environment:
      - SERVER_PORT= 8181
      - SPRING_DATASOURCE_URL=jdbc:postgresql://service-db/postgres

  frontend:
    image: nginxus
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "8082:80"

  gigachat:
    build:
      context: .
      dockerfile: fastapi.Dockerfile
    command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - "8003:8000"

  service-db:
    image: postgres:14.7-alpine
    user: postgres
    environment:
      POSTGRES_USER: postgres
      PGUSER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: 24812
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "--quiet" ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
volumes:
  db-data:
  pgadmin-data: